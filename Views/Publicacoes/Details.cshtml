@model MvcPublicacoes.Models.Publicacao

@{
    ViewBag.Title = "Details";
}

<hgroup class="title">
    <h1>Detalhes da Publicação</h1>
</hgroup>

<table>
    <tr>
        <td>
            <fieldset>
                <legend>Publicacao</legend>

                <div class="display-label">
                    @Html.LabelFor(model => model.Titulo)
                </div>
                <div class="display-field">
                    @Html.DisplayFor(model => model.Titulo)
                </div>

                <div class="display-label">
                    @Html.LabelFor(model => model.DtPublicacao)
                </div>
                <div class="display-field">
                    @Html.DisplayFor(model => model.DtPublicacao)
                </div>

                <div class="display-label">
                    @Html.LabelFor(model => model.Autor.Nome)
                </div>
                <div class="display-field">
                    @Html.DisplayFor(model => model.Autor.Nome)
                </div>

                <div class="display-label">
                    @Html.LabelFor(model => model.TipoPublicacao.Descricao)
                </div>
                <div class="display-field">
                    @Html.DisplayFor(model => model.TipoPublicacao.Descricao)
                </div>

                <div class="display-label">
                    @Html.LabelFor(model => model.Instituicao.Nome)
                </div>
                <div class="display-field">
                    @Html.DisplayFor(model => model.Instituicao.Nome)
                </div>

                <div class="display-label">
                    @Html.LabelFor(model => model.Situacao.Descricao)
                </div>
                <div class="display-field">
                    @Html.DisplayFor(model => model.Situacao.Descricao)
                </div>

                <div class="display-label">
                    @Html.LabelFor(model => model.Referencia)
                </div>
                <div class="display-field">
                    @Html.DisplayFor(model => model.Referencia)
                </div>

                <div class="display-label">
                    @Html.LabelFor(model => model.Resumo)
                </div>
                <div class="display-field">
                    @Html.DisplayFor(model => model.Resumo)
                </div>

                <div class="display-label">
                    @Html.LabelFor(model => model.Conceito)
                </div>
                <div class="display-field">
                    @Html.DisplayFor(model => model.Conceito)
                </div>

                <div class="display-label">
                    @Html.Label("Local da Publicação")
                </div>
                <div class="display-field">
                    @Html.DisplayFor(model => model.Localizacao)
                </div>

            </fieldset>
        </td>
        <td>
            <style type="text/css">
                #map-canvas {
                    height: 400px;
                    width: 500px;

                }
            </style>

            <script type="text/javascript" src="http://www.google.com/jsapi?autoload={'modules':[{name:'maps',version:3,other_params:''}]}"></script>
            <script type="text/javascript">
                function DistanceWidget(map) {
                    this.set('map', map);
                    this.set('position', map.getCenter());

                    var marker = new google.maps.Marker({
                        draggable: false,
                        title: @Html.Raw(Json.Encode(Model.Localizacao))
                    });

                    // Bind the marker map property to the DistanceWidget map property
                    marker.bindTo('map', this);

                    // Bind the marker position property to the DistanceWidget position
                    // property
                    marker.bindTo('position', this);
                }
                DistanceWidget.prototype = new google.maps.MVCObject();

                function init() {
                    var mapDiv = document.getElementById('map-canvas');

                    var Lat = @Html.Raw(Json.Encode(Model.Latitude));
                    var Lng = @Html.Raw(Json.Encode(Model.Longitude));

                    var map = new google.maps.Map(mapDiv, {
                        //center: new google.maps.LatLng(-30.0346471, -51.2176584),
                        center: new google.maps.LatLng(Lat,Lng),
                        zoom: 8,
                        mapTypeId: google.maps.MapTypeId.ROADMAP
                    });
                    var distanceWidget = new DistanceWidget(map);
                }

                google.maps.event.addDomListener(window, 'load', init);

            </script>

            <div id="map-canvas"></div>
        </td>
</tr>

</table>

<p>
    @if (Roles.GetRolesForUser(User.Identity.Name).Contains("Administrador") || Model.Autor.UserId.Equals(WebSecurity.GetUserId(User.Identity.Name)))
    {
        @Html.ActionLink("Editar", "Edit", new { id = Model.IdPublicacao })
        <text>|</text>
    }
    @Html.ActionLink("Voltar para Lista", "Index")
</p>



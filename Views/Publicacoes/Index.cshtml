@model PagedList.IPagedList<MvcPublicacoes.Models.Publicacao>
@using MvcPublicacoes.Controllers;
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@helper Truncate(string input, int length)
{
    if (input.Length <= length)
    {
        @input
    }
    else
    {
        @input.Substring(0, length)<text>...</text>
    }
}

@{
    ViewBag.Title = "Lista de Publicações";
}

<hgroup class="title">
    <h1>@ViewBag.Title</h1>
</hgroup>

<p>
    @Html.ActionLink("Nova Publicação", "Create")
</p>

<table>
    <tr>
        <th @((ViewBag.PubOrder == PubOrder.Titulo) ? "class=" + ViewBag.Order : "")>
            @Html.ActionLink("Título", "Index", new { pubOrder = PubOrder.Titulo, order = (ViewBag.PubOrder == PubOrder.Titulo && ViewBag.Order == Order.asc) ? Order.desc : Order.asc, page = Model.PageNumber})
        </th>

        <th @((ViewBag.PubOrder == PubOrder.DtPublicacao) ? "class=" + ViewBag.Order : "")>
            @Html.ActionLink("Ano", "Index", new { pubOrder = PubOrder.DtPublicacao, order = (ViewBag.PubOrder == PubOrder.DtPublicacao && ViewBag.Order == Order.asc) ? Order.desc : Order.asc, page = Model.PageNumber })
        </th>

        <th @((ViewBag.PubOrder == PubOrder.Autor) ? "class=" + ViewBag.Order : "")>
            @Html.ActionLink("Autor", "Index", new { pubOrder = PubOrder.Autor, order = (ViewBag.PubOrder == PubOrder.Autor && ViewBag.Order == Order.asc) ? Order.desc : Order.asc, page = Model.PageNumber })
        </th>

        <th @((ViewBag.PubOrder == PubOrder.Tipo) ? "class=" + ViewBag.Order : "")>
            @Html.ActionLink("Tipo", "Index", new { pubOrder = PubOrder.Tipo, order = (ViewBag.PubOrder == PubOrder.Tipo && ViewBag.Order == Order.asc) ? Order.desc : Order.asc, page = Model.PageNumber })
        </th>

        <th @((ViewBag.PubOrder == PubOrder.Instituicao) ? "class=" + ViewBag.Order : "")>
            @Html.ActionLink("Instituição", "Index", new { pubOrder = PubOrder.Instituicao, order = (ViewBag.PubOrder == PubOrder.Instituicao && ViewBag.Order == Order.asc) ? Order.desc : Order.asc, page = Model.PageNumber })
        </th>

        <th @((ViewBag.PubOrder == PubOrder.Situacao) ? "class=" + ViewBag.Order : "")>
            @Html.ActionLink("Situação", "Index", new { pubOrder = PubOrder.Situacao, order = (ViewBag.PubOrder == PubOrder.Situacao && ViewBag.Order == Order.asc) ? Order.desc : Order.asc, page = Model.PageNumber })
        </th>
        @if (Request.IsAuthenticated) 
        {
        <th>
            @Html.ActionLink("Ações", "Index", new { ViewBag.PubOrder, ViewBag.Order, page = Model.PageNumber })
        </th>
        }
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.ActionLink(item.Titulo.Length > 40 ? item.Titulo.Substring(0,40)+"..." : item.Titulo, "Details", new { id = item.IdPublicacao })
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DtPublicacao.Year)
        </td>
        <td>
            @*@Html.DisplayFor(modelItem => item.Autor.Nome)*@
            @Truncate(item.Autor.Nome,25) 
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TipoPublicacao.Descricao)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Instituicao.Nome)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Situacao.Descricao)
        </td>

        <td>
            @if (Roles.GetRolesForUser(User.Identity.Name).Contains("Administrador") || item.Autor.UserId.Equals(WebSecurity.GetUserId(User.Identity.Name)))
            {
                @Html.ActionLink("Editar", "Edit", new { id=item.IdPublicacao })
                <text>|</text>
                @Html.ActionLink("Excluir", "Delete", new { id=item.IdPublicacao })
            }
        </td>
    </tr>
}

</table>
<br />
Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index", new { ViewBag.PubOrder, ViewBag.Order, page }))
